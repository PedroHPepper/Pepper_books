// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pepper_Books.Database;

namespace Pepper_Books.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210527111320_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pepper_Books.Models.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Pepper_Books.Models.Entities.BookSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountPaid")
                        .HasColumnType("float");

                    b.Property<int>("FKidBook")
                        .HasColumnType("int");

                    b.Property<int>("FKidSale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FKidBook");

                    b.HasIndex("FKidSale");

                    b.ToTable("BookSale");
                });

            modelBuilder.Entity("Pepper_Books.Models.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("TotalAmountPaid")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("Pepper_Books.Models.Entities.BookSale", b =>
                {
                    b.HasOne("Pepper_Books.Models.Entities.Book", "Book")
                        .WithMany("BookSales")
                        .HasForeignKey("FKidBook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pepper_Books.Models.Entities.Sale", "Sale")
                        .WithMany("BookSales")
                        .HasForeignKey("FKidSale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Pepper_Books.Models.Entities.Book", b =>
                {
                    b.Navigation("BookSales");
                });

            modelBuilder.Entity("Pepper_Books.Models.Entities.Sale", b =>
                {
                    b.Navigation("BookSales");
                });
#pragma warning restore 612, 618
        }
    }
}
